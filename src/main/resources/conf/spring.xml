<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context
              http://www.springframework.org/schema/context/spring-context-4.2.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd">
    <!--启用注解-->
    <context:component-scan base-package="com.ck.aop" />
    <!-- 启用 aspectj 方式 AOP-->
    <aop:aspectj-autoproxy proxy-target-class="true" />
<!--    声明数据库配置文件的位置-->
    <context:property-placeholder location="classpath:conf/jdbc.properties"></context:property-placeholder>
<context:property-placeholder location="classpath:conf/jdbc.properties"></context:property-placeholder>
<!--   声明数据源，连接数据库-->
    <bean id="datasource" class="com.alibaba.druid.pool.DruidDataSource"
    init-method="init" destroy-method="close">
        <property name="url" value="${jdbc.url}"></property>
        <property name="username" value="${jdbc.username}"></property>
        <property name="password" value="${jdbc.password}"></property>
    </bean>
<!--    声明sqlsessionFactory-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="datasource"></property>
        <property name="configLocation" value="classpath:conf/mybatis.xml"></property>
    </bean>
<!--    声明mybatis的扫描器，创建dao对象-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
        <property name="basePackage" value="com.ck.dao"></property>
    </bean>
<!--    声明service的注解-->
    <context:component-scan base-package="com.ck.service"></context:component-scan>
<!--    事务的配置，aspectj的配置-->
    <bean id="dataSourceTransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="datasource"></property>
    </bean>
<!--   声明AOP代理的对象类，声明切面类-->
    <bean id="listenerTarget" class="org.springframework.web.context.ContextLoaderListener"></bean>
    <bean id="myAdvice" class="com.ck.aop.MyAdvice"></bean>
<!--    声明自动代理生成器，创建代理-->
    <aop:aspectj-autoproxy></aop:aspectj-autoproxy>
<!--    声明事务注解驱动-->
    <tx:annotation-driven transaction-manager="dataSourceTransactionManager"/>

</beans>
